code/Gemfile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | source 'https://rubygems.org'
app-1  | ^
app-1  | code/Gemfile:27:34: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  | gem 'tzinfo-data', platforms: %i[ windows jruby ]
app-1  |                                  ^
app-1  | code/Gemfile:27:48: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  | gem 'tzinfo-data', platforms: %i[ windows jruby ]
app-1  |                                                ^
app-1  | code/Gemfile:34:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem simple_form should appear before slim-rails.
app-1  | gem 'simple_form'
app-1  | ^^^^^^^^^^^^^^^^^
app-1  | code/Gemfile:35:1: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem ancestry should appear before simple_form.
app-1  | gem 'ancestry'
app-1  | ^^^^^^^^^^^^^^
app-1  | code/Gemfile:50:30: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  |   gem 'debug', platforms: %i[ mri windows ], require: 'debug/prelude'
app-1  |                              ^
app-1  | code/Gemfile:50:42: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  |   gem 'debug', platforms: %i[ mri windows ], require: 'debug/prelude'
app-1  |                                          ^
app-1  | code/Gemfile:73:3: C: [Correctable] Bundler/OrderedGems: Gems should be sorted in an alphabetical order within their section of the Gemfile. Gem faker should appear before selenium-webdriver.
app-1  |   gem 'faker'
app-1  |   ^^^^^^^^^^^
app-1  | code/Rakefile:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Add your own tasks in files placed in lib/tasks ending in .rake,
app-1  | ^
app-1  | code/Rakefile:4:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
app-1  | require_relative "config/application"
app-1  |                  ^^^^^^^^^^^^^^^^^^^^
app-1  | code/app/channels/application_cable/channel.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module ApplicationCable
app-1  | ^
app-1  | code/app/channels/application_cable/connection.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module ApplicationCable
app-1  | ^
app-1  | code/app/controllers/application_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class ApplicationController < ActionController::Base
app-1  | ^
app-1  | code/app/controllers/comments_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class CommentsController < ApplicationController
app-1  | ^
app-1  | code/app/controllers/comments_controller.rb:6:14: C: [Correctable] Rails/Blank: Use values[:parent_id].blank? instead of values[:parent_id].nil? || values[:parent_id].empty?.
app-1  |     parent = values[:parent_id].nil? || values[:parent_id].empty? ? nil : PostComment.find(values[:parent_id])
app-1  |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/app/controllers/likes_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class LikesController < ApplicationController
app-1  | ^
app-1  | code/app/controllers/likes_controller.rb:5:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
app-1  |   def get_post
app-1  |       ^^^^^^^^
app-1  | code/app/controllers/monitor_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class MonitorController < ApplicationController
app-1  | ^
app-1  | code/app/controllers/monitor_controller.rb:4:5: C: [Correctable] Style/RaiseArgs: Provide an exception class and message as arguments to raise.
app-1  |     raise Exception.new('Test exception')
app-1  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/app/controllers/monitor_controller.rb:4:11: W: [Correctable] Lint/RaiseException: Use StandardError over Exception.
app-1  |     raise Exception.new('Test exception')
app-1  |           ^^^^^^^^^
app-1  | code/app/controllers/monitor_controller.rb:5:5: W: Lint/UnreachableCode: Unreachable code detected.
app-1  |     redirect_to '/'
app-1  |     ^^^^^^^^^^^^^^^
app-1  | code/app/controllers/posts_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | include ActionView::Helpers::DateHelper
app-1  | ^
app-1  | code/app/controllers/posts_controller.rb:1:1: C: Style/MixinUsage: include is used at the top level. Use inside class or module.
app-1  | include ActionView::Helpers::DateHelper
app-1  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/app/controllers/posts_controller.rb:6:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
app-1  |   def get_current_post
app-1  |       ^^^^^^^^^^^^^^^^
app-1  | code/app/controllers/posts_controller.rb:25:5: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - params_permited.
app-1  |     params_permited=params.require(:post).permit(%i[title body category_id])
app-1  |     ^^^^^^^^^^^^^^^
app-1  | code/app/controllers/posts_controller.rb:25:20: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator =.
app-1  |     params_permited=params.require(:post).permit(%i[title body category_id])
app-1  |                    ^
app-1  | code/app/controllers/posts_controller.rb:36:28: C: [Correctable] Rails/HttpStatus: Prefer :unprocessable_content over 422 to define HTTP status code.
app-1  |       render :new, status: 422, alert:
app-1  |                            ^^^
app-1  | code/app/controllers/user_controller.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class UserController < ApplicationController
app-1  | ^
app-1  | code/app/controllers/user_controller.rb:2:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
app-1  |   def new ...
app-1  |   ^^^^^^^
app-1  | code/app/controllers/user_controller.rb:5:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
app-1  |   def create ...
app-1  |   ^^^^^^^^^^
app-1  | code/app/controllers/user_controller.rb:8:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
app-1  |   def login ...
app-1  |   ^^^^^^^^^
app-1  | code/app/controllers/user_controller.rb:11:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
app-1  |   def logout ...
app-1  |   ^^^^^^^^^^
app-1  | code/app/controllers/user_controller.rb:14:3: C: [Correctable] Style/EmptyMethod: Put empty method definitions on a single line.
app-1  |   def accept ...
app-1  |   ^^^^^^^^^^
app-1  | code/app/controllers/users/sessions_controller.rb:19:7: C: Style/GuardClause: Use a guard clause (render json: { user: user.as_json(only: [ :id, :email ]) } and return if request.format.json?) instead of wrapping the code inside a conditional expression.
app-1  |       if request.format.json?
app-1  |       ^^
app-1  | code/app/controllers/users/sessions_controller.rb:20:49: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
app-1  |         render json: { user: user.as_json(only: [ :id, :email ]) } and return
app-1  |                                                 ^^^^^^^^^^^^^^^
app-1  | code/app/controllers/users/sessions_controller.rb:20:50: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |         render json: { user: user.as_json(only: [ :id, :email ]) } and return
app-1  |                                                  ^
app-1  | code/app/controllers/users/sessions_controller.rb:20:62: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |         render json: { user: user.as_json(only: [ :id, :email ]) } and return
app-1  |                                                              ^
app-1  | code/app/helpers/application_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module ApplicationHelper
app-1  | ^
app-1  | code/app/helpers/comments_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module CommentsHelper
app-1  | ^
app-1  | code/app/helpers/likes_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module LikesHelper
app-1  | ^
app-1  | code/app/helpers/posts_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module PostsHelper
app-1  | ^
app-1  | code/app/helpers/user_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | module UserHelper
app-1  | ^
app-1  | code/app/jobs/application_job.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class ApplicationJob < ActiveJob::Base
app-1  | ^
app-1  | code/app/mailers/application_mailer.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class ApplicationMailer < ActionMailer::Base
app-1  | ^
app-1  | code/app/models/application_record.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class ApplicationRecord < ActiveRecord::Base
app-1  | ^
app-1  | code/app/models/category.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class Category < ApplicationRecord
app-1  | ^
app-1  | code/app/models/post.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | code/app/models/post.rb:3:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
app-1  | class Post < ApplicationRecord
app-1  | ^^^^^
app-1  | code/app/models/post.rb:8:3: C: [Correctable] Style/Alias: Use alias instead of alias_method in a class body.
app-1  |   alias_method :likes, :post_likes
app-1  |   ^^^^^^^^^^^^
app-1  | code/app/models/post.rb:9:3: C: [Correctable] Style/Alias: Use alias instead of alias_method in a class body.
app-1  |   alias_method :comments, :post_comments
app-1  |   ^^^^^^^^^^^^
app-1  | code/app/models/post.rb:27:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
app-1  |   def get_comments
app-1  |       ^^^^^^^^^^^^
app-1  | code/app/models/post.rb:28:5: C: [Correctable] Style/RedundantSelf: Redundant self detected.
app-1  |     self.post_comments.root_comments.order(created_at: :desc)
app-1  |     ^^^^
app-1  | code/app/models/post_comment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class PostComment < ApplicationRecord
app-1  | ^
app-1  | code/app/models/post_comment.rb:10:7: C: Naming/AccessorMethodName: Do not prefix reader method names with get_.
app-1  |   def get_comments
app-1  |       ^^^^^^^^^^^^
app-1  | code/app/models/post_like.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class PostLike < ApplicationRecord
app-1  | ^
app-1  | code/app/models/user.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | class User < ApplicationRecord
app-1  | ^
app-1  | code/config.ru:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # This file is used by Rack-based servers to start the application.
app-1  | ^
app-1  | code/config.ru:3:18: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
app-1  | require_relative "config/environment"
app-1  |                  ^^^^^^^^^^^^^^^^^^^^
app-1  | code/config/application.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require_relative 'boot'
app-1  | ^
app-1  | code/config/boot.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | ENV['BUNDLE_GEMFILE'] ||= File.expand_path('../Gemfile', __dir__)
app-1  | ^
app-1  | code/config/environment.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Load the Rails application.
app-1  | ^
app-1  | code/config/environments/development.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'active_support/core_ext/integer/time'
app-1  | ^
app-1  | code/config/environments/development.rb:86:41: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.web_console.whitelisted_ips = [ '0.0.0.0/0', '::/0' ]
app-1  |                                         ^
app-1  | code/config/environments/development.rb:86:61: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.web_console.whitelisted_ips = [ '0.0.0.0/0', '::/0' ]
app-1  |                                                             ^
app-1  | code/config/environments/production.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'active_support/core_ext/integer/time'
app-1  | ^
app-1  | code/config/environments/production.rb:58:45: C: [Correctable] Style/GlobalStdStream: Use $stdout instead of STDOUT.
app-1  |   config.logger = ActiveSupport::Logger.new(STDOUT)
app-1  |                                             ^^^^^^
app-1  | code/config/environments/production.rb:59:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .tap with .new on line 58.
app-1  |     .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
app-1  |     ^^^^
app-1  | code/config/environments/production.rb:59:41: C: [Correctable] Style/RedundantConstantBase: Remove redundant ::.
app-1  |     .tap  { |logger| logger.formatter = ::Logger::Formatter.new }
app-1  |                                         ^^
app-1  | code/config/environments/production.rb:60:5: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .then with .new on line 58.
app-1  |     .then { |logger| ActiveSupport::TaggedLogging.new(logger) }
app-1  |     ^^^^^
app-1  | code/config/environments/production.rb:63:22: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.log_tags = [ :request_id ]
app-1  |                      ^
app-1  | code/config/environments/production.rb:63:34: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.log_tags = [ :request_id ]
app-1  |                                  ^
app-1  | code/config/environments/production.rb:96:50: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.active_record.attributes_for_inspect = [ :id ]
app-1  |                                                  ^
app-1  | code/config/environments/production.rb:96:54: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.active_record.attributes_for_inspect = [ :id ]
app-1  |                                                      ^
app-1  | code/config/environments/test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'active_support/core_ext/integer/time'
app-1  | ^
app-1  | code/config/initializers/ancestry.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | Ancestry.default_ancestry_format = :materialized_path2
app-1  | ^
app-1  | code/config/initializers/assets.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Be sure to restart your server when you modify this file.
app-1  | ^
app-1  | code/config/initializers/assets.rb:14:50: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  | Rails.application.config.assets.precompile += %w[ custom.css ]
app-1  |                                                  ^
app-1  | code/config/initializers/assets.rb:14:61: C: [Correctable] Layout/SpaceInsidePercentLiteralDelimiters: Do not use spaces inside percent literal delimiters.
app-1  | Rails.application.config.assets.precompile += %w[ custom.css ]
app-1  |                                                             ^
app-1  | code/config/initializers/content_security_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Be sure to restart your server when you modify this file.
app-1  | ^
app-1  | code/config/initializers/devise.rb:61:35: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.case_insensitive_keys = [ :email ]
app-1  |                                   ^
app-1  | code/config/initializers/devise.rb:61:42: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.case_insensitive_keys = [ :email ]
app-1  |                                          ^
app-1  | code/config/initializers/devise.rb:66:35: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.strip_whitespace_keys = [ :email ]
app-1  |                                   ^
app-1  | code/config/initializers/devise.rb:66:42: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.strip_whitespace_keys = [ :email ]
app-1  |                                          ^
app-1  | code/config/initializers/devise.rb:100:34: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.skip_session_storage = [ :http_auth ]
app-1  |                                  ^
app-1  | code/config/initializers/devise.rb:100:45: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   config.skip_session_storage = [ :http_auth ]
app-1  |                                             ^
app-1  | code/config/initializers/filter_parameter_logging.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Be sure to restart your server when you modify this file.
app-1  | ^
app-1  | code/config/initializers/filter_parameter_logging.rb:6:47: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
app-1  | Rails.application.config.filter_parameters += [ ...
app-1  |                                               ^
app-1  | code/config/initializers/inflections.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Be sure to restart your server when you modify this file.
app-1  | ^
app-1  | code/config/initializers/locale.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | I18n.load_path += Dir[Rails.root.join('config', 'locale', '*.{rb,yml}')]
app-1  | ^
app-1  | code/config/initializers/locale.rb:1:19: C: [Correctable] Rails/RootPathnameMethods: Rails.root is a Pathname, so you can use Rails.root.glob('config/locale/*.{rb,yml}').
app-1  | I18n.load_path += Dir[Rails.root.join('config', 'locale', '*.{rb,yml}')]
app-1  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/config/initializers/locale.rb:1:23: C: [Correctable] Rails/FilePath: Prefer Rails.root.join('path/to').
app-1  | I18n.load_path += Dir[Rails.root.join('config', 'locale', '*.{rb,yml}')]
app-1  |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/config/initializers/locale.rb:2:26: C: [Correctable] Style/SymbolArray: Use %i or %I for an array of symbols.
app-1  | I18n.available_locales = [ :ru, :en ]
app-1  |                          ^^^^^^^^^^^^
app-1  | code/config/initializers/locale.rb:2:27: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  | I18n.available_locales = [ :ru, :en ]
app-1  |                           ^
app-1  | code/config/initializers/locale.rb:2:36: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  | I18n.available_locales = [ :ru, :en ]
app-1  |                                    ^
app-1  | code/config/initializers/permissions_policy.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | # Be sure to restart your server when you modify this file.
app-1  | ^
app-1  | code/config/initializers/sentry.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | code/config/initializers/sentry.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
app-1  | Sentry.init do |config|
app-1  | ^^^^^^
app-1  | code/config/puma.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | threads_count = ENV.fetch('RAILS_MAX_THREADS', 3)
app-1  | ^
app-1  | code/config/puma.rb:4:27: C: [Correctable] Style/RedundantFetchBlock: Use fetch('PORT', 3000) instead of fetch('PORT') { 3000 }.
app-1  | bind "tcp://0.0.0.0:#{ENV.fetch('PORT') { 3000 }}"
app-1  |                           ^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/config/routes.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | Rails.application.routes.draw do
app-1  | ^
app-1  | code/db/seeds.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | code/db/seeds.rb:2:1: C: [Correctable] Layout/LeadingEmptyLines: Unnecessary blank line at the beginning of the source.
app-1  | categories = [
app-1  | ^^^^^^^^^^
app-1  | code/db/seeds.rb:3:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
app-1  |   { name: "Кино" },
app-1  |           ^^^^^^
app-1  | code/db/seeds.rb:4:11: C: [Correctable] Style/StringLiterals: Prefer single-quoted strings when you don't need string interpolation or special symbols.
app-1  |   { name: "Спектакли" }
app-1  |           ^^^^^^^^^^^
app-1  | code/db/seeds.rb:12:15: C: [Correctable] Style/NumericLiterals: Use underscores(_) as thousands separator and separate every 3 digits with them.
app-1  |     password: 123456,
app-1  |               ^^^^^^
app-1  | code/db/seeds.rb:14:4: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   } ].map do |u|
app-1  |    ^
app-1  | code/db/seeds.rb:14:5: C: [Correctable] Layout/MultilineArrayBraceLayout: The closing array brace must be on the line after the last array element when the opening brace is on a separate line from the first array element.
app-1  |   } ].map do |u|
app-1  |     ^
app-1  | code/db/seeds.rb:41:1: C: [Correctable] Layout/MultilineMethodCallIndentation: Align .map with [ on line 18.
app-1  | .map do |p|
app-1  | ^^^^
app-1  | code/db/seeds.rb:47:1: C: Naming/VariableNumber: Use normalcase for variable numbers.
app-1  | comment_1 = PostComment.create({ parent: nil, content: 'level 1 comment 1', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/db/seeds.rb:48:1: C: Naming/VariableNumber: Use normalcase for variable numbers.
app-1  | comment_2 = PostComment.create({ parent: comment_1, content: 'level 2 comment', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/db/seeds.rb:49:1: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - comment_4. Did you mean comment_3?
app-1  | comment_4 = PostComment.create({ parent: comment_2, content: 'level 3 comment', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/db/seeds.rb:49:1: C: Naming/VariableNumber: Use normalcase for variable numbers.
app-1  | comment_4 = PostComment.create({ parent: comment_2, content: 'level 3 comment', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/db/seeds.rb:50:1: W: [Correctable] Lint/UselessAssignment: Useless assignment to variable - comment_3. Did you mean comment_4?
app-1  | comment_3 = PostComment.create({ parent: nil, content: 'level 1 comment 2', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/db/seeds.rb:50:1: C: Naming/VariableNumber: Use normalcase for variable numbers.
app-1  | comment_3 = PostComment.create({ parent: nil, content: 'level 1 comment 2', user: author, post: root_post })
app-1  | ^^^^^^^^^
app-1  | code/test/application_system_test_case.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/application_system_test_case.rb:4:63: C: [Correctable] Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ]
app-1  |                                                               ^
app-1  | code/test/application_system_test_case.rb:4:74: C: Layout/SpaceInsideArrayLiteralBrackets: Do not use space inside array brackets.
app-1  |   driven_by :selenium, using: :headless_chrome, screen_size: [ 1400, 1400 ]
app-1  |                                                                          ^
app-1  | code/test/channels/application_cable/connection_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/controllers/comments_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/controllers/likes_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/controllers/posts_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/controllers/user_controller_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/models/category_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/models/post_comment_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/models/post_like_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/models/post_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/models/user_test.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.
app-1  | require 'test_helper'
app-1  | ^
app-1  | code/test/scenarios/comment_operations.rb:1:1: W: Lint/EmptyFile: Empty file detected.
app-1  | code/test/scenarios/not_logged_scenarios.rb:7:12: C: [Correctable] Style/NumericPredicate: Use User.size.positive? instead of User.size>0.
app-1  |     assert User.size>0
app-1  |            ^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:7:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
app-1  |     assert User.size>0
app-1  |            ^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:7:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >.
app-1  |     assert User.size>0
app-1  |                     ^
app-1  | code/test/scenarios/not_logged_scenarios.rb:9:12: C: [Correctable] Style/NumericPredicate: Use Category.size.positive? instead of Category.size>0.
app-1  |     assert Category.size>0
app-1  |            ^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:9:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
app-1  |     assert Category.size>0
app-1  |            ^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:9:25: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >.
app-1  |     assert Category.size>0
app-1  |                         ^
app-1  | code/test/scenarios/not_logged_scenarios.rb:10:12: C: [Correctable] Style/NumericPredicate: Use Post.size.positive? instead of Post.size>0.
app-1  |     assert Post.size>0
app-1  |            ^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:10:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
app-1  |     assert Post.size>0
app-1  |            ^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:10:21: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >.
app-1  |     assert Post.size>0
app-1  |                     ^
app-1  | code/test/scenarios/not_logged_scenarios.rb:11:12: C: [Correctable] Style/NumericPredicate: Use PostComment.size.positive? instead of PostComment.size>0.
app-1  |     assert PostComment.size>0
app-1  |            ^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:11:12: C: [Correctable] Style/ZeroLengthPredicate: Use !empty? instead of size > 0.
app-1  |     assert PostComment.size>0
app-1  |            ^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:11:28: C: [Correctable] Layout/SpaceAroundOperators: Surrounding space missing for operator >.
app-1  |     assert PostComment.size>0
app-1  |                            ^
app-1  | code/test/scenarios/not_logged_scenarios.rb:14:3: W: Lint/EmptyBlock: Empty block detected.
app-1  |   test 'home page' do ...
app-1  |   ^^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:17:3: W: Lint/EmptyBlock: Empty block detected.
app-1  |   test 'posts listed' do ...
app-1  |   ^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:20:3: W: Lint/EmptyBlock: Empty block detected.
app-1  |   test 'login possible' do ...
app-1  |   ^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/not_logged_scenarios.rb:23:3: W: Lint/EmptyBlock: Empty block detected.
app-1  |   test 'registration possible' do ...
app-1  |   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
app-1  | code/test/scenarios/post_operations.rb:1:1: W: Lint/EmptyFile: Empty file detected.
app-1  | code/test/scenarios/user_management.rb:1:1: W: Lint/EmptyFile: Empty file detected.
app-1  | code/test/test_helper.rb:1:1: C: [Correctable] Style/FrozenStringLiteralComment: Missing frozen string literal comment.