c
n
Post.find(params.require(:id))
params
c
n
parent
post
values
n
c
PostComment.create!(parent: parent, post: post, creator: @current_user, content: values[:content])
PostComment.create!(parent: parent, post: post, creator: @current_user, content:value[:content])
parent
n
c
e
n
c
parent = values[:parent_id].integer? ? PostCommentc.find(values[:parent_id]) : nil
parent = values[:parent_id].integer? ? PostComment.find(values[:parent_id]) : nil
parent
n
c
parent_id
n
c
values
n
c
params
e
n
c
PostComment.create!(value)
value = {parent: parent_comment, post_id: post.id, creator: @current_user.id, content:"asdasdasdasdasd"}
parent_comment = post.post_comment.first
post = Post.find(params.require(:post_id))
PostComment
PostComments
debug q
q.errors
q.parent_id
q.parent_id = "3"
q.parent_id
q.errors
q.valid?
q.parent_id = "3"
q.parent_id = "/3/4/"
q.parent_id = "/3/4"
q.parent_id = "/3//4
q.parent_id = "\/3\/"
q.errors
pp q
q
q.save!
q.save
q = x.children.new(post_id:1, creator_id: 1, content:'asdasd')
x.children.new
x = PostComment.find(3)
x
x.children.new
value
post.post_comment.create!(value)
value[:parent] = z
value = value.except :parent_id
value
value = value.to_h
z = PostComment.find(3)
x.save!
x.save
x
x = post.post_comment.new(value.to_h)
z.parent_id
z = post.post_comment.new(value.to_h)
value.to_h
value
z = post.post_comment.new(value)
post
value
post.post_comment.create!(value.to_h)
value[:parent_id] = value[:parent_id].to_i
post.post_comment.create!(value.to_h)
value
value[:parent_id] = value[:parent_id].scan(/.*(\d+)\/$/).last.first
"/1/2/3/4/".scan /.*(\d+)\/$/
"/1/2/3/4/"[/.*(\d+)\/$/]
value[:parent_id][/.*(\d+)\/$/]
value[:parent_id][.*(\d+)$/]
value[:parent_id][.*(\d+)\/$/]
value[:parent_id][/(\d+)\/$/]
value[:parent_id][/(\d+)\/?$/]
value[:parent_id][//(\d+)\/?$//,0]
value[:parent_id][//(\d+)\/?$//,1]
value[:parent_id][/(\d+)\/?$/]
value[:parent_id][//(\d+)\/?$//]
z.parent_id='3'
z.parent_id='/3/'
z = post.post_comment.new
post.post_comment.new(value.to_h)
PostComment.all
post.post_comment.create!(value.to_h)
value
n
c
post.post_comment.create!(value.to_h)
value
value[:parent_id]='/3'
post.post_comment.create!(value.to_h)
value
n
c
n
c
parent.children.new
c
z.children.new
z.children
z = PostComment.take
parent.children.new
PostComment.all
PostComment.update_all(parent_id:nil)
PostComment.update_all(parent_id=nil)
PostComment.all
parent.children.new
parent
c
z.errors.to_h
pp z.errors
debug z.errors
z.errors.
z.errors.to_s
z.errors.to_S
z.errors
z.valid?
z = post.post_comment.create(value)
value
value[:parent_id] = value[:parent_id].to_s
z.errors
z.valid?
z.is_valid?
z = post.post_comment.create(value)
post.post_comment.create!(value)
post
value
values
pp e
debug e
e
n
c
debug e
pp e
e
n
c
errors
n
value
n
c
n
c
n
PostComment.all
n
value
n
c
n
PostComment
n
value
n
params
value
n
post
n
c
p.post_comment.new
p.post_comment
p.creator
p = parent
parent
parent.post_commments
parent.post_commment
parent.post_commment.new
c
n
parent.post_comment.new
parent.post_comment
n
parent.is_a? Post
parent
c
PostLike
post.post_like.where(creator_id: @current_user.id).pluck(:id)
post.post_like.where(creator_id: @current_user.id).pluck
post.post_like.where(creator_id: @current_user.id)
post.post_like.find_by(creator_id: @current_user.id)
c
PostComment
value
post.post_comment.create(value.to_h)
value
c
n
c
value
continue
post.post_comment.create!(value.to_h)
post.post_comment.create(value.to_h)
value.to_h
value
post.post_comment
post
