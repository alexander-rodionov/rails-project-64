c
@post.post_likes.create(post: @post, user: current_user) unless liked?
liked?
@post.post_likes
c
post_likes_path(1,1)
post_likes_path(1)
post_likes_path
post_like_path
posts_like_path
toggle_post_like_path
toggle_post_like
c
Post.find(params.require(:post_id))
c
Post.find(params.require(:post_id))
c
Post.find(params.require(:post_id))
c
Post.find(params.require(:post_id))
Post.all
Post.find(params.require(:post_id))
c
Post.all
Posts.all
Post.find(params.require(:post_id))
c
Post.find(params.require(:post_id))
c
n
Post.find(params.require(:post_id))
params.require(:post_id)
Post.all
c
n
post_like_path(@post, post_likes(:like_one))
post_likes_path(@post, post_likes(:like_one))
post_like_path(@post, post_likes(:like_one))
@post
c
delete post_likes_path(@post, like.id)
post_likes_path(@post, like)
post_likes_path(@post, like.id)
post_likes_path(@post.id, like.id)
delete post_likes_path(@post.id, like.id)
delete post_likes_path(@post, like.id)
post_likes_path(@post, like.id)
like
like = PostLike.create!(post: @post, user: @user)
@user
@post
c
like
n
c
Faker::Books::Lovecraft.paragraph
"Comprehension abnormal unutterable charnel. Accursed cat indescribable effulgence antediluvian foetid madness. Amorphous abnormal iridescence non-euclidean hideous. Daemoniac shunned furtive.".size
Faker::Books::Lovecraft.paragraph.size
Faker::Books::Lovecraft.paragraph
Faker::Books::Lovecraft.sentence
post_hash[:title][0..2]
post_hash[:title][0..3]
post_hash.title[0..3]
post_hash
n
users
Users
posts
@new_post_hash
c
users(:one)
users
continue
response.body[/<a.*href.*Регистрация/]
response.body[/<a.*?href.*?Регистрация/]
response.body[/<a.*href.*Регистрация/]
response.body[/a.*href.*Регистрация/]
response.body[/a.*Регистрация/]
response.body[/Регистрация/]
response.body[/input type=.*?submit.*?Войти/]
response.body[/input.*?submit.*?Войти/]
response.body[/input?.*submit?.*Войти/]
response.body[/input.*submit.*Войти/]
response.body[/input/]
response.body[/.*/]
response.body.sub(/.*/)
response.body.substring(/.*/)
assert_match /<a.*href.*Регистрация/, response.body
n
c
values[:parent_id].nil? || values[:parent_id].empty?
values[:parent_id]
values[:parent_id].nil?
n
c
params.require(:post_comment).permit(:parent_id, :content)
params.require(:post_comments).permit(:parent_id, :content)
c
h
n
